version: "3.4"
services:
  csharp: #docker run -it -v ${PWD}:/work -w /work -p 5000:5000 aimvector/csharp:1.0.0 /bin/sh
    container_name: csharp
    image: ad9191077bda #aimvector/csharp:1.0.0
    build:
      context: ./c#
      target: debug
    volumes:
    - ./c#/src/:/work/
    ports:
      - 5000:5000
  golang: #docker run -it -v ${PWD}:/go/src/work -p 5001:5000 -p 2345:2345 --security-opt "seccomp:unconfined" aimvector/golang:1.0.0
    container_name: golang
    image: aimvector/golang:1.0.0
    build: 
      context: ./golang
      target: debug
    volumes:
    - ./golang/src/:/go/src/work/
    ports:
      - 5001:5000
      - 2345:2345
    security_opt:
      - "seccomp:unconfined"
  nodejs: #docker run -it -v ${PWD}:/work -w /work -p 5002:5000 aimvector/nodejs:1.0.0 /bin/sh
    container_name: nodejs
    image: aimvector/nodejs:1.0.0
    build:
      context: ./nodejs
      target: prod
    #working_dir: /work      #comment out for build.target:prod
    #entrypoint: /bin/sh     #comment out for build.target:prod
    #stdin_open: true        #comment out for build.target:prod
    #tty: true               #comment out for build.target:prod
    volumes:
    - ./nodejs/src/:/work
    ports:
      - 5002:5000
  python: #docker run -it -v ${PWD}:/work -w /work -p 5003:5000 aimvector/python:1.0.0 /bin/sh
    container_name: python
    image: aimvector/python:1.0.0
    build:
      context: ./python
      target: prod
    #working_dir: /work      #comment out for build.target:prod
    #entrypoint: /bin/sh     #comment out for build.target:prod
    #stdin_open: true        #comment out for build.target:prod
    #tty: true               #comment out for build.target:prod
    volumes:
    - ./python/src/:/work
    ports:
      - 5003:5000
